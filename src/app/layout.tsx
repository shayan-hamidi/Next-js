import type { Metadata } from 'next';
import { getLocale } from 'next-intl/server';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter';
import './globals.css';
import { FsNextIntlClientProvider, FsThemeContextProvider } from '@fs/utils';
import { FsToaster } from '@fs/core';
import localFont from 'next/font/local';

export const iransansxv = localFont({
  src: '../assets/fonts/iranSans/webfont/IRANSansXV.woff',
  display: 'fallback',
  variable: '--font-iransansxv',
  weight: '100 1000',
  declarations: [
    {
      prop: 'font-feature-settings',
      value: "'ss03'",
    },
  ],
});

export const iransansx = localFont({
  src: [
    {
      path: '../assets/fonts/iranSans/webfont/staticfonts/iransansx-regular.woff',
      weight: '400',
      style: 'normal',
    },
    {
      path: '../assets/fonts/iranSans/webfont/staticfonts/iransansx-bold.woff',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: '--font-iransansx',
  declarations: [
    {
      prop: 'font-feature-settings',
      value: "'ss03'",
    },
  ],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();

  return (
    <html
      lang={locale}
      className={`${iransansxv.variable} ${iransansx.variable}`}
      suppressHydrationWarning
    >
      <body>
        <FsThemeContextProvider>
          <AppRouterCacheProvider options={{ key: 'css' }}>
            <FsNextIntlClientProvider locale={locale as 'fa' | 'en'}>
              {children}
              <FsToaster />
            </FsNextIntlClientProvider>
          </AppRouterCacheProvider>
        </FsThemeContextProvider>
      </body>
    </html>
  );
}
